LETTER_UP ::= "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z";
LETTER_DOWN ::= "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z";
NUM ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
WS ::= " " | "\t" | "\r" | "\n";

BREAK ::= ";";
CONST ::= "const";
STRUCT ::= "struct";
PIPELINE ::= "pipeline";
VFORMAT ::= "vformat";
USE ::= "use";
EQ ::= "=";
BLOCK_START ::= "{";
BLOCK_END ::= "}";
COMMENT ::= "#";
OUTPUT ::= "output";
BLENDFUNC ::= "blendfunc";

BOOL_LITTERAL ::= "false" | "true";
INT_LITTERAL ::= NUM+;
FLOAT_LITTERAL ::= NUM* "." NUM+;

ALPHA ::= LETTER_UP | LETTER_DOWN;
ALPHA_NUM ::= ALPHA | NUM;
IDENTIFIER ::= ALPHA ALPHA_NUM*;

property_type ::= IDENTIFIER;
property_name ::= IDENTIFIER;
property ::= property_type property_name BREAK;
struct_name ::= IDENTIFIER;
struct ::= STRUCT WS* struct_name WS* BLOCK_START WS* property+ WS* BLOCK_END;

constant_buffer ::= CONST WS* struct;

constant ::= CONST WS* property;

output ::= OUTPUT WS* property;

vertex_format ::= VFORMAT WS* struct;

file_name ::= IDENTIFIER;
member_name ::= IDENTIFIER;
namespace ::= file_name "::" member_name;

block_name ::= IDENTIFIER;
block_var_name ::= IDENTIFIER | namespace;
block_var_value ::= BOOL_LITTERAL | INT_LITTERAL | FLOAT_LITTERAL | IDENTIFIER;
block_var ::= block_var_name WS* EQ WS* block_var_value WS* BREAK;
pipeline ::= PIPELINE WS* block_name WS* BLOCK_START WS* block_var+ WS* BLOCK_END;
blendfunc ::= BLENDFUNC WS* block_name WS*;

use ::= USE WS* namespace WS* BREAK;

comment ::= COMMENT string;

statement ::= use | constant_buffer | constant | output | vertex_format | comment | pipeline | blendfunc;

sal ::= (WS* statement WS*)*;
